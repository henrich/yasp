#!/bin/bash
#
# yasp - Yet Another Simple/Speedy Piuparts
#
# 2013 Hideki Yamane <henrich@debian.org/or.jp>
# 
#-------------------------------------------------------------------------------

set -e

export LANG=C
export LC_ALL=C

if [ ! -z `uname -o | grep Linux` ]; then
    kernel="Linux"
    echo "kernel: Linux"
    echo ""
elif [ ! -z `uname -o | grep BSD` ]; then
    kernel="BSD"
    echo "kernel: *BSD"
    echo "it doesn't support aufs, aborting..."
    exit 1
else
    echo "kernel: unknown, aborting..."
    exit 1
fi

#FIXME: kFreeBSD support?
if [ "$kernel" = Linux ]; then
    config="/boot/config-`uname -a|cut -d' ' -f3`"
else
    exit 1
fi

if [ -z `grep CONFIG_AUFS_FS $config` ]; then
     echo "Your kernel seems to not support aufs, aborting..."
     exit 1
fi

ARCH=`dpkg-architecture -qDEB_HOST_ARCH`

#-------------------------------------------------------------------------------
# read configuration
#-------------------------------------------------------------------------------

if [ -f /etc/yasp.conf ]; then
    . /etc/yasp.conf
fi

if [ -z "$yasp_dir" -o -z "$distro" -o -z "$mirror" ]; then
   echo "Something wrong with configuration... check your yasp.conf"
   exit 1
fi

if [ -d /usr/lib/yasp ]; then
    for file in /usr/lib/yasp/*
    do
      . $file
    done
fi

case "$1" in
    init)
    yasp_create
    yasp_base_update
    ;;

    base-update)
    yasp_base_update
    ;;

    test)

    # get package name from changes file, e.g. hail_0.8+0.11.37389dbf9b-1_amd64.changes
    #FIXME: now yasp can only accept .changes file, however probably user want to test .debs

    packagefile=`echo $2|grep .changes$`

    if [ -z "$packagefile" ]; then
        echo "Please specify .changes file"
        exit 1
    else
        package=`cat $packagefile | cut -d' ' -f4|grep .deb$|sort|uniq|cut -d'_' -f1`
	pkg_version=`cat $packagefile | grep ^"Version: [0-9]." | cut -d' ' -f2`
        packagelist=`cat $packagefile |cut -d' ' -f4|grep .deb$|sort|uniq|tr '\n' ' '`
        srcpackage=`basename $2|cut -d'_' -f1`
    fi

    # cache *.deb to aptcache
    yasp_cache

    # install, uninstall, purge and upgrade test
    dir=`dirname $2`
    for i in $distro
    do
	repo_version=`rmadison ${srcpackage} | grep ${i} | cut -d'|' -f2 |sed -e s/\ //g`
	yasp_install && yasp_remove && yasp_purge && yasp_install_del && yasp_upgrade
    done
    trap 'for mountd in "$tmpmountdir"/dev/pts "$tmpmountdir"/proc "$tmpmountdir"; \
          do umount $mountd; done; \
	  echo -e "${start_red}`mount|grep aufs`${end_color}"; \
	  for directory in "$workdir_install" "$workdir_remove" "$workdir_purge" "$workdir_upgrade"; \
          do if [ -d $directory ]; then rm -rf $directory; fi; done' EXIT
    echo -e "${start_green}PASS: install/remove/purge/upgrade test${end_color}"
    ;;

    help | *)
    cat << END 
    Usage: yasp (init|base-update|test <changes file> |help)

    Option:
      init        : create COW base environment for each distribution
      base-update : update COW base environment for each distribution
      test        : specify changes file and exec test
                    (install/uninstall/remove/purge/uninstall)
      help        : show this message

END

    ;;
esac
